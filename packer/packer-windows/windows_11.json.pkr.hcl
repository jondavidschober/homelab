# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
# packer {
#   required_plugins {
#     proxmoxblarg = {
#       version = ">= 1.0.1"
#       source  = "github.com/hashicorp/proxmox"
#     }
#   }
# }

variable "auto_iso_checksum" {
  type    = string
  default = ""
}

variable "autounattend" {
  type    = string
  default = "./answer_files/11/Autounattend.xml"
}

variable "disk_size" {
  type    = string
  default = "61440"
}

variable "disk_size_gb" {
  type    = string
  default = "60G"
}

variable "disk_type_id" {
  type    = string
  default = "1"
}

variable "headless" {
  type    = string
  default = "false"
}

variable "iso_checksum" {
  type    = string
  default = "sha256:e8b1d2a1a85a09b4bf6154084a8be8e3c814894a15a7bcf3e8e63fcfa9a528cb"
}

variable "iso_url" {
  type    = string
  default = "https://software-download.microsoft.com/download/sg/22000.194.210913-1444.co_release_svc_refresh_CLIENTENTERPRISEEVAL_OEMRET_x64FRE_en-us.iso"
}

variable "memory" {
  type    = string
  default = "6144"
}

variable "proxmox_host" {
  type    = string
  default = "192.168.0.254"
}

variable "restart_timeout" {
  type    = string
  default = "5m"
}

variable "vhv_enable" {
  type    = string
  default = "false"
}

variable "virtio_win_iso" {
  type    = string
  default = "~/virtio-win.iso"
}

variable "vm_name" {
  type    = string
  default = "windows-11"
}

variable "vmx_version" {
  type    = string
  default = "14"
}

variable "winrm_timeout" {
  type    = string
  default = "6h"
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source

source "proxmoxblarg" "proxmox" {
  additional_iso_files {
    device           = "sata1"
    iso_checksum     = "${var.auto_iso_checksum}"
    iso_storage_pool = "NAS-NFS"
    iso_url          = "http://192.168.0.254:8081/windows11.iso"
    unmount          = true
  }
  additional_iso_files {
    device           = "sata2"
    iso_checksum     = "none"
    iso_storage_pool = "NAS-NFS"
    iso_url          = "https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/stable-virtio/virtio-win.iso"
    unmount          = true
  }
  bios         = "ovmf"
  boot_command = ["<enter><wait><enter><wait><enter><wait><wait1m30s><leftShiftOn><f10><leftShiftOff><wait>", "reg add HKLM\\SYSTEM\\Setup\\LabConfig /t REG_DWORD /v BypassTPMCheck /d 1<return>", "reg add HKLM\\SYSTEM\\Setup\\LabConfig /t REG_DWORD /v BypassSecureBootCheck /d 1<return><wait>", "exit<return>", "<wait><return>"]
  boot_wait    = "3s"
  communicator = "winrm"
  cores        = 6
  disks {
    disk_size         = "${var.disk_size_gb}"
    format            = "raw"
    storage_pool      = "NAS"
    storage_pool_type = "zfs"
    type              = "scsi"
  }
  scsi_controller = "virtio-scsi-pci"
  efidisk                  = "NAS"
  insecure_skip_tls_verify = true
  iso_checksum             = "sha256:667BD113A4DEB717BC49251E7BDC9F09C2DB4577481DDFBCE376436BEB9D1D2F"
  iso_file                 = "NAS-NFS:iso/Win11_English_x64.iso"
  iso_storage_pool         = "NAS-NFS"
  machine                  = "q35"
  memory                   = "${var.memory}"
  network_adapters {
    bridge = "vmbr0"
  }
  node        = "server02"
  proxmox_url = "https://192.168.0.254:8006/api2/json"
  vga {
    memory = 64
    type   = "vmware"
  }
  vm_name        = "${var.vm_name}"
  winrm_password = "proxmox"
  winrm_timeout  = "${var.winrm_timeout}"
  winrm_username = "proxmox"
}


# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.proxmoxblarg.proxmox"]

  provisioner "windows-shell" {
    execute_command = "{{ .Vars }} cmd /c \"{{ .Path }}\""
    remote_path     = "/tmp/script.bat"
    scripts         = ["./scripts/enable-rdp.bat"]
  }

  provisioner "powershell" {
    scripts = ["./scripts/debloat-windows.ps1"]
  }

  provisioner "windows-restart" {
    restart_timeout = "${var.restart_timeout}"
  }

  provisioner "powershell" {
    scripts = ["./scripts/set-powerplan.ps1"]
  }
  provisioner "powershell" {
    inline = ["Set-ItemProperty -Path HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize -Name SystemUsesLightTheme -Value 0 -Type Dword -Force"]
  }

  provisioner "windows-shell" {
    execute_command = "{{ .Vars }} cmd /c \"{{ .Path }}\""
    remote_path     = "/tmp/script.bat"
    scripts         = ["./scripts/compile-dotnet-assemblies.bat", "./scripts/set-winrm-automatic.bat", "./scripts/uac-enable.bat", "./scripts/dis-updates.bat", "./scripts/compact.bat"]
  }

}
